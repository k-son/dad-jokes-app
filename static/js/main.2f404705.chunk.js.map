{"version":3,"sources":["components/Joke/Joke.js","components/JokeList/JokeList.js","App.js","reportWebVitals.js","index.js"],"names":["Joke","props","getEmoji","votes","className","onClick","upvote","style","borderColor","downvote","text","aria-role","aria-label","slice","indexOf","getLabel","JokeList","state","jokes","JSON","parse","window","localStorage","getItem","loading","seenJokes","Set","map","j","handleClick","bind","this","length","getJokes","numJokesToGet","axios","get","headers","Accept","res","newJoke","data","joke","has","push","id","uuidv4","setState","st","setItem","stringify","alert","delta","sort","a","b","src","alt","handleVote","Component","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f404705.chunk.js","sourcesContent":["import React from 'react';\nimport './Joke.css';\n\nconst Joke = (props) => {\n\n  const getColor = () => {\n    if (props.votes >= 15) {\n      return \"#4CAF50\";\n    } else if (props.votes >= 12) {\n      return \"#8BC34A\";\n    } else if (props.votes >= 9) {\n      return \"#CDDC39\";\n    } else if (props.votes >= 6) {\n      return \"#FFEB3B\";\n    } else if (props.votes >= 3) {\n      return \"#FFC107\";\n    } else if (props.votes >= 0) {\n      return \"#FF9800\";\n    } else {\n      return \"#f44336\";\n    }\n  };\n\n  const getEmoji = () => {\n    if (props.votes >= 15) {\n      return \"em em-rolling_on_the_floor_laughing\";\n    } else if (props.votes >= 12) {\n      return \"em em-laughing\";\n    } else if (props.votes >= 9) {\n      return \"em em-smiley\";\n    } else if (props.votes >= 6) {\n      return \"em em-slightly_smiling_face\";\n    } else if (props.votes >= 3) {\n      return \"em em-neutral_face\";\n    } else if (props.votes >= 0) {\n      return \"em em-confused\";\n    } else {\n      return \"em em-angry\";\n    }\n  }\n\n  const getLabel = () => {\n    let text = getEmoji();\n    return text.slice(text.indexOf('-') + 1);\n  };\n\n  return (\n    <div className=\"Joke\">\n      <div className=\"Joke-buttons\">\n        <i className=\"fas fa-arrow-up\" onClick={props.upvote}></i>\n        <span className=\"Joke-votes\" style={{borderColor: getColor()}}>{props.votes}</span>\n        <i className=\"fas fa-arrow-down\" onClick={props.downvote}></i>\n      </div>\n      <div className=\"Joke-text\">{props.text}</div>\n      <div className=\"Joke-smiley\">\n        <i className={getEmoji()} aria-role=\"presentation\" aria-label={getLabel()}></i>\n      </div>\n    </div>\n  );\n};\n\nexport default Joke;\n","import React, {Component} from 'react';\nimport './JokeList.css';\nimport Joke from '../Joke/Joke';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass JokeList extends Component {\n  static defaultProps = {\n    numJokesToGet: 10\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      jokes: JSON.parse(window.localStorage.getItem('jokes') || '[]'),\n      loading: false\n    };\n    // list of loaded jokes, to check if new loaded joke isn't a duplicate \n    this.seenJokes = new Set(this.state.jokes.map(j => j.text));\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.jokes.length === 0) this.getJokes();\n  }\n\n  async getJokes() {\n    try {\n      let jokes = [];\n      // while beacouse if there are duplicates (you can get more instances of thesame joke) it will loop further\n      while (jokes.length < this.props.numJokesToGet) {\n        let res = await axios.get('https://icanhazdadjoke.com/', {\n          headers: {\n            Accept: 'application/json'\n          }\n        });\n\n        const newJoke = res.data.joke;\n        if (!this.seenJokes.has(newJoke)) {\n          jokes.push({\n            id: uuidv4(),\n            text: newJoke,\n            votes: 0\n          });\n        }\n      }\n\n      this.setState(st => ({\n        loading: false,\n        jokes: [...st.jokes, ...jokes]\n      }),\n        // optional second argument, a callback function executed once setState is completed\n        () => window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\n      );\n    } catch(e) {\n      alert(e);\n      this.setState({loading: false});\n    }\n  }\n\n  handleVote(id, delta) {\n    this.setState(st => ({\n      jokes: st.jokes.map(j => \n        j.id === id ? {...j, votes: j.votes + delta} : j\n      )\n    }),\n      // optional second argument, a callback function executed once setState is completed\n      () => window.localStorage.setItem('jokes', JSON.stringify(this.state.jokes))\n    );\n  }\n\n  handleClick() {\n    this.setState({loading: true }, this.getJokes);\n  }\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"JokeList-spinner\">\n          <i className=\"far fa-8x fa-laugh fa-spin\" />\n          <h1 className=\"JokeList-title\">Loading...</h1>\n        </div>\n      );\n    }\n\n    const jokes = this.state.jokes.sort((a, b) => b.votes - a.votes);\n\n    return (\n      <div className=\"JokeList\">\n        <div className=\"JokeList-sidebar\">\n          <h1 className=\"JokeList-title\">\n            <span>Dad</span> Jokes\n          </h1>\n          <img src='https://assets.dryicons.com/uploads/icon/svg/8927/0eb14c71-38f2-433a-bfc8-23d9c99b3647.svg' alt=\"rotfl\" />\n          <button className=\"JokeList-getmore\" onClick={this.handleClick}>Fetch Jokes</button>\n        </div>\n        <div className=\"JokeList-jokes\">\n          {jokes.map(j => (\n            <div>\n              <Joke \n                key={j.id}\n                votes={j.votes}\n                text={j.text}\n                upvote={() => this.handleVote(j.id, 1)}\n                downvote={() => this.handleVote(j.id, -1)}\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default JokeList;","import React, {Component} from 'react';\nimport JokeList from './components/JokeList/JokeList';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <JokeList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}